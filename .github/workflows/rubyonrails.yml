name: "Ruby on Rails CI"

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master, dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:15-3.5
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # Add or replace dependency steps here
      - name: Install dependencies
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libz-dev libicu-dev build-essential g++ libgeos-dev libgeos++-dev
          version: 1.0
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4 # v1.146.0
        with:
          bundler-cache: true
          ruby-version: 3.1.4
      - name: Rebuild rgeo gem
        run: bundle pristine rgeo
      - name: Set Node.js 14.x
        uses: actions/setup-node@v4
        with:
          node-version: 14.x
          cache: yarn
      - name: Install project dependencies
        run: yarn
      - name: Webpack compilation
        run: NODE_ENV=test bin/rails webpacker:compile
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:setup
      # Add or replace test runners here
      - name: Run tests
        run: bin/rake test

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4 # v1.146.0
        with:
          bundler-cache: true
          ruby-version: 3.1.4
      # Add or replace any other lints here
      # - name: Security audit dependencies
      #   run: bin/rake bundle:audit
      # - name: Security audit application code
      #   run: bin/brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel

  docker:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/dev'

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Docker Build and Push
        uses: cartoway/docker-compose-build-push-action@main
        with:
          registry_password: ${{ secrets.GITHUB_TOKEN }}
