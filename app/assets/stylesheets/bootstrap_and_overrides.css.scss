// Copyright © Mapotempo, 2013-2014
//
// This file is part of Mapotempo.
//
// Mapotempo is free software. You can redistribute it and/or
// modify since you respect the terms of the GNU Affero General
// Public License as published by the Free Software Foundation,
// either version 3 of the License, or (at your option) any later version.
//
// Mapotempo is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
// or FITNESS FOR A PARTICULAR PURPOSE.  See the Licenses for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with Mapotempo. If not, see:
// <http://www.gnu.org/licenses/agpl.html>
//
/*
  Use Font Awesome icons (default)
  To use Glyphicons instead of Font Awesome, replace with "require twitter-bootstrap-static/bootstrap-glyphicons"
  */

@import "variables";

/* FIX */

.container:after {
    clear: inherit;
}

// Specific for chrome 45 user_agent
// var() -> chrome 49
// font-weight: <number> -> chrome 62
.fa {
  font-family: "Font Awesome 6 Free";
  font-weight: bold;
}

/* Change */

.no-gutter [class*="col-"]:not(:last-child) {
    padding-right:0;
}

$navbar-height: 50px;

.navbar {
  box-shadow: $box-shadow;
  -moz-box-shadow: $box-shadow;
  -webkit-box-shadow: $box-shadow;
  -o-box-shadow: $box-shadow;
  margin-bottom: 10px;
}

h1 {
  margin: 15px 0;
  padding: 5px 0;
  border-bottom: 1px solid #e5e5e5;
}

.form-control.input-sm {
    height: 25px;
    padding: 3px 5px;
}

.row {
  padding-left: unset;
  padding-right: unset;

  margin-left: unset;
  margin-right: unset;
}

.row.form-group {
  .form-inline {
    // several values on same line, like radio buttons
    label {
      margin-left: 10px;
    }
    label:nth-of-type(1) {
      margin-left: 0px;
    }
  }

  input[type="radio"], input[type="checkbox"] {
    margin-top: 10px;
    margin-right: 3px;
  }
}

.input-group-btn .btn-default {
  color: $primary-color;
}

.input-group-addon.input-sm, .input-group-sm .input-group-btn .btn {
    height: 25px;
    padding: 3px 5px;
    margin-right: -1px;
}

button {
  outline: none !important;
}
@media screen and (max-width: 767px) {
  .btn {
    text-overflow: ellipsis;
    overflow: hidden;
    max-width: 100%;
  }
}

a.btn-default {
  color: $text-black;
}

.dropdown-menu {
  max-height: 350px;
  overflow-y: auto;
}
.navbar .dropdown-menu {
  max-height: 400px;
}
.navbar .dropdown-toggle span.menu_label {
  max-width: 15em;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  display: inline-block;
  vertical-align: bottom;
}

.leaflet-top, .leaflet-bottom {
    z-index: 900 !important; /* Bootstrap also use 1000 for control */
}

.leaflet-editing-icon {
  border-radius: 10px;
  border: 3px dimgrey solid;
  opacity: unset;
}

.leaflet-draw-tooltip {
  display: none;
}

hr {
  margin-bottom: 6px;
  margin-top: 6px;
}

/* Bootstrap */
input.form-control[required]:not(:disabled),
select.form-control[required]:not(:disabled) {
  background: #EEFAFF;
}

label .popover {
  font-weight: normal;
}

/** External look-like **/

/* Select2 */
.select2-selection--multiple:before {
  content: "▾ ";
  position: relative;
  float: right;
  height: 0;
  right: 5px;
  top: 5px;
}
.select2 .select2-selection--multiple .select2-selection__rendered {
  padding-right: 10px;
}
.fake .select2-selection:focus {
  border: 1px solid #5897fb;
  box-shadow: 0 0 5px rgba(0,0,0,0.3);
  outline:medium none;
}
.select2-container--bootstrap .select2-selection--multiple .select2-search--inline .select2-search__field  {
  min-width: 0em;
}
.select2 img {
  vertical-align: baseline; /* better for tags */
}

/* Bootstrap-select */
.bootstrap-select {
  button {
    color: #555 !important;
  }
  .caret {
    border-left-width: 4px !important; // conflict with ".input-group :first-child" and gem version 1.12.1
  }
}

/* Move padding in a for easier click area */
.accordion > .panel-heading {
  padding: 0px;

  a {
    display: block;
    padding: 10px 15px;
  }
}
/* Add Open and Close cheron to accordion */
.panel-heading .accordion-toggle:after {
    font: var(--fa-font-solid);
    content: "\f077";
    float: right;
    color: black;
}
.panel-heading .accordion-toggle.collapsed:after {
    font: var(--fa-font-solid);
    content: "\f078";
}

/* Table sorter */
.tablesorter-bootstrap {
  .tablesorter-header {
    text-align: center;

    .btn-group {
      text-align: left;
    }
  }
  .tablesorter-header-inner {
    padding: 0px 12px 0px 0px;

    .tablesorter-icon {
      display: none !important;
    }
  }

  .tablesorter-header .tablesorter-header-inner:after {
    font: var(--fa-font-solid);
    float: right;
    content: "\f0dc";
  }

  .tablesorter-header.sorter-false .tablesorter-header-inner:after {
    display: none;
  }

  .tablesorter-headerAsc .tablesorter-header-inner:after {
    content: "\f0de";
  }

  .tablesorter-headerDesc .tablesorter-header-inner:after {
    content: "\f0dd";
  }
}

/* Leaflet geocoder */
.leaflet-control-geocoder-expanded input, .leaflet-control-geocoder-error {
  width: 350px;
}

ul.leaflet-control-geocoder-alternatives {
  width: inherit;
}

/* Leaflet draw */
.leaflet-draw-actions {
  a {
    background-color: #3071A9;
    border-color: #285E8E;
    color: #FFF;
  }

  a:hover {
    background-color: #3071A9;
    text-decoration: none;
    color: #FFF;
  }

  li a {
    color: #FFF;
  }
}

/* jquery-simplecolorpicker */
span.color[data-color] {
  line-height: 1.3;
  border: 1px solid lightgray;
  width: 19px;
  height: 19px;
  border-radius: 50%;
  -moz-border-radius: 50%;
  -webkit-border-radius: 50%;
  -o-border-radius: 50%;
}

/* tubolinks */
html.turbolinks-progress-bar::before {
  background-color: #13B0CA !important;
}

/* leaflet-marker-icon */
.leaflet-marker-icon {
  font-size: 16px;
}

.leaflet-marker-icon.small .number {
  background: none;
  color: #fff !important; /* !important for print */
  right: -1px;
  top: 7px;
}

.leaflet-marker-icon.large .number {
  background: none;
  color: #fff !important; /* !important for print */
  right: 8px;
  top: 9px;
}

.store-icon {
  text-shadow: 1px 1px 3px rgba(0,0,0,0.3);
}

.point-icon-container {
  width: unset !important;
  height: unset !important;
}

.fa-stack {
  width: inherit !important;
  height: inherit !important;
  vertical-align: unset !important;
}

.point-icon-text {
  color: white !important;
  font-weight: 600;
  font-size: 14px;
}

.cluster-point-border {
  position: absolute;
  margin-left: -2px;
  font-size: 28px;
  opacity: .4;
}

.cluster-point-icon {
  font-size: 24px;
}

.cluster-point-text {
  font-size: 12px;
  width: 24px;
}

.marker-cluster-icon {
  color: white;
  width: 18px;
  font-weight: 600;
}

.marker-cluster-multi-color {
  font-size: 12px;
  border-radius: 20px;
  transition: all 0.3s linear;
  opacity: 0.9;
}

.modal-icon {
  display: inline;
  margin: 0 5px 0 0;
}

/*
  PNotify
*/
.ui-pnotify {
  top: inherit;
  margin-top: $navbar-height; // not possible to use top because it's overloaded by pnotify
  z-index: 10 !important;
}

/* Api-web */
body.api-web {
  .ui-pnotify {
    margin-top: 0px; // not possible to use top because it's overloaded by pnotify
  }
  .flash {
    margin: 30px;
    position: fixed;
    left: 30px;
    right: 30px;
  }
  #map {
    position: absolute;
    z-index: 0;
    top: 0px;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

@media print {
  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 {
    float: left;
  }
  .col-sm-12 {
    width: 100%;
  }
  .col-sm-11 {
    width: 91.66666667%;
  }
  .col-sm-10 {
    width: 83.33333333%;
  }
  .col-sm-9 {
    width: 75%;
  }
  .col-sm-8 {
    width: 66.66666667%;
  }
  .col-sm-7 {
    width: 58.33333333%;
  }
  .col-sm-6 {
    width: 50%;
  }
  .col-sm-5 {
    width: 41.66666667%;
  }
  .col-sm-4 {
    width: 33.33333333%;
  }
  .col-sm-3 {
    width: 25%;
  }
  .col-sm-2 {
    width: 16.66666667%;
  }
  .col-sm-1 {
    width: 8.33333333%;
  }
  .col-sm-pull-12 {
    right: 100%;
  }
  .col-sm-pull-11 {
    right: 91.66666667%;
  }
  .col-sm-pull-10 {
    right: 83.33333333%;
  }
  .col-sm-pull-9 {
    right: 75%;
  }
  .col-sm-pull-8 {
    right: 66.66666667%;
  }
  .col-sm-pull-7 {
    right: 58.33333333%;
  }
  .col-sm-pull-6 {
    right: 50%;
  }
  .col-sm-pull-5 {
    right: 41.66666667%;
  }
  .col-sm-pull-4 {
    right: 33.33333333%;
  }
  .col-sm-pull-3 {
    right: 25%;
  }
  .col-sm-pull-2 {
    right: 16.66666667%;
  }
  .col-sm-pull-1 {
    right: 8.33333333%;
  }
  .col-sm-pull-0 {
    right: auto;
  }
  .col-sm-push-12 {
    left: 100%;
  }
  .col-sm-push-11 {
    left: 91.66666667%;
  }
  .col-sm-push-10 {
    left: 83.33333333%;
  }
  .col-sm-push-9 {
    left: 75%;
  }
  .col-sm-push-8 {
    left: 66.66666667%;
  }
  .col-sm-push-7 {
    left: 58.33333333%;
  }
  .col-sm-push-6 {
    left: 50%;
  }
  .col-sm-push-5 {
    left: 41.66666667%;
  }
  .col-sm-push-4 {
    left: 33.33333333%;
  }
  .col-sm-push-3 {
    left: 25%;
  }
  .col-sm-push-2 {
    left: 16.66666667%;
  }
  .col-sm-push-1 {
    left: 8.33333333%;
  }
  .col-sm-push-0 {
    left: auto;
  }
  .col-sm-offset-12 {
    margin-left: 100%;
  }
  .col-sm-offset-11 {
    margin-left: 91.66666667%;
  }
  .col-sm-offset-10 {
    margin-left: 83.33333333%;
  }
  .col-sm-offset-9 {
    margin-left: 75%;
  }
  .col-sm-offset-8 {
    margin-left: 66.66666667%;
  }
  .col-sm-offset-7 {
    margin-left: 58.33333333%;
  }
  .col-sm-offset-6 {
    margin-left: 50%;
  }
  .col-sm-offset-5 {
    margin-left: 41.66666667%;
  }
  .col-sm-offset-4 {
    margin-left: 33.33333333%;
  }
  .col-sm-offset-3 {
    margin-left: 25%;
  }
  .col-sm-offset-2 {
    margin-left: 16.66666667%;
  }
  .col-sm-offset-1 {
    margin-left: 8.33333333%;
  }
  .col-sm-offset-0 {
    margin-left: 0%;
  }
  .visible-xs {
    display: none !important;
  }
  .hidden-xs {
    display: block !important;
  }
  table.hidden-xs {
    display: table;
  }
  tr.hidden-xs {
    display: table-row !important;
  }
  th.hidden-xs,
  td.hidden-xs {
    display: table-cell !important;
  }
  .hidden-xs.hidden-print {
    display: none !important;
  }
  .hidden-sm {
    display: none !important;
  }
  .visible-sm {
    display: block !important;
  }
  table.visible-sm {
    display: table;
  }
  tr.visible-sm {
    display: table-row !important;
  }
  th.visible-sm,
  td.visible-sm {
    display: table-cell !important;
  }
  .hidden-print {
    display: none !important;
  }
}

.table-valign > tbody > tr > td {
  vertical-align: middle;
}

.table {

  > tbody > tr, > thead > tr {

    .center {
      text-align: center;
    }

  }

}

/* import errors */
table.grid, .grid tr * {
  border: 1px solid;
  padding: 3px;
}

div.grid-container {
  margin-top: 5px;
  overflow: auto;
}

.dropdown-menu > li > p.padding-list {
  display: block;
  padding: 3px 20px;
  clear: both;
  font-weight: normal;
  line-height: 1.42857143;
  color: $text-black;
  white-space: nowrap;
}

.accordion-menu > li > p.padding-list {
  display: block;
  padding: 3px 20px;
  clear: both;
  font-weight: normal;
  line-height: 1.42857143;
  color: $text-black;
  white-space: nowrap;
}

// Prevent ellipsis on [TextField/Btn] elements when media queries under 767px
@media screen and (max-width: 767px) {
  .input-group-btn:last-child>.btn, .input-group-btn:last-child>.btn-group {
    margin: 0 !important;
  }
}

// Bootstrap slider in form
.input-group {
  .slider {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .slider-horizontal {
    margin-left: 12px;
  }

  .slider-tick.in-selection {
    background: inherit;
    background-image: linear-gradient(to bottom, #f9f9f9 0%, #f5f5f5 100%);
  }

  .slider-selection {
    background: inherit;
  }
}

.warning{
  font-weight: bold;
  color: #8a6d3b;
}
.has-warning .input-group-addon{
  border-color: #8a6d3b !important; // otherwise it's overrided by scaffold css
}

.text-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Backport
.d-none {
  display: none !important;
}

// Backport
.d-flex {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
}

// Backport
.flex-wrap {
  -ms-flex-wrap: wrap !important;
  flex-wrap: wrap !important;
}

// Backport
.justify-content-start {
  justify-content: flex-start !important;
}

// Backport
.justify-content-center {
  -webkit-box-pack: center !important;
  -ms-flex-pack: center !important;
  justify-content: center !important;
}

// Backport
.justify-content-between {
  -webkit-box-pack: justify !important;
  -ms-flex-pack: justify !important;
  justify-content: space-between !important;
}

// Backport
.justify-content-end {
  justify-content: flex-end !important;
}


// Backport
.align-items-center {
  -webkit-box-align: center !important;
  -ms-flex-align: center !important;
  align-items: center !important;
}

.btn-primary {
  background-color: $primary-color;
  border-color: darken($primary-color, 10%);
}

.panel {
  border-radius: 0;
}

.panel-body {
  margin: 0px;
  padding: 2px 5px;
}

.simplecolorpicker.fontawesome span.color[data-selected]::after {
  font: var(--fa-font-solid);
  content: "\f00C";
}

.modern-scroll {
  &::-webkit-scrollbar{
    width: 5px;
  }

  &::-webkit-scrollbar-track {
    background: #ddd;
  }

  &::-webkit-scrollbar-thumb {
    background: #666;
  }
}

.modal-content {
  border-radius: unset;
  border-left: 12px solid $primary-color;
}

.progress {
  height: 20px;
}

.progress-bar.primary{
  background-color: $primary-color;
}

// Backports
.mb-3 {
  margin-bottom: 1rem !important;
}

.mb-1 {
  margin-bottom: 3px !important;
}

// Backports
.mb-0 {
  margin-bottom: 0 !important;
}

.ml-0 {
  margin-left: 0px !important;
}

.mr-2 {
  margin-right: 6px !important;
}

.mt-1 {
  margin-top: 3px !important;
}

// Backports
.p-0 {
  padding: 0 !important;
}

.p-3 {
  padding: 10px !important;
}

.pv-1 {
  padding-top: 3px !important;
  padding-bottom: 3px !important;
}

.card {
  // scss-docs-start card-css-vars
  --#{$prefix}card-spacer-y: #{$card-spacer-y};
  --#{$prefix}card-spacer-x: #{$card-spacer-x};
  --#{$prefix}card-title-spacer-y: #{$card-title-spacer-y};
  --#{$prefix}card-title-color: #{$card-title-color};
  --#{$prefix}card-subtitle-color: #{$card-subtitle-color};
  --#{$prefix}card-border-width: #{$card-border-width};
  --#{$prefix}card-border-color: #{$card-border-color};
  --#{$prefix}card-border-radius: #{$card-border-radius};
  --#{$prefix}card-box-shadow: #{$card-box-shadow};
  --#{$prefix}card-inner-border-radius: #{$card-inner-border-radius};
  --#{$prefix}card-cap-padding-y: #{$card-cap-padding-y};
  --#{$prefix}card-cap-padding-x: #{$card-cap-padding-x};
  --#{$prefix}card-cap-bg: #{$card-cap-bg};
  --#{$prefix}card-cap-color: #{$card-cap-color};
  --#{$prefix}card-height: #{$card-height};
  --#{$prefix}card-color: #{$card-color};
  --#{$prefix}card-bg: #{$card-bg};
  --#{$prefix}card-img-overlay-padding: #{$card-img-overlay-padding};
  --#{$prefix}card-group-margin: #{$card-group-margin};
  // scss-docs-end card-css-vars

  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0; // See https://github.com/twbs/bootstrap/pull/22740#issuecomment-305868106
  height: var(--#{$prefix}card-height);
  color: var(--#{$prefix}body-color);
  word-wrap: break-word;
  background-color: var(--#{$prefix}card-bg);
  background-clip: border-box;
  border: var(--#{$prefix}card-border-width) solid var(--#{$prefix}card-border-color);
  @include border-radius(var(--#{$prefix}card-border-radius));
  @include box-shadow(var(--#{$prefix}card-box-shadow));

  > hr {
    margin-right: 0;
    margin-left: 0;
  }

  > .list-group {
    border-top: inherit;
    border-bottom: inherit;

    &:first-child {
      border-top-width: 0;
      @include border-top-radius(var(--#{$prefix}card-inner-border-radius));
    }

    &:last-child  {
      border-bottom-width: 0;
      @include border-bottom-radius(var(--#{$prefix}card-inner-border-radius));
    }
  }

  // Due to specificity of the above selector (`.card > .list-group`), we must
  // use a child selector here to prevent double borders.
  > .card-header + .list-group,
  > .list-group + .card-footer {
    border-top: 0;
  }
}

.card-body {
  // Enable `flex-grow: 1` for decks and groups so that card blocks take up
  // as much space as possible, ensuring footers are aligned to the bottom.
  flex: 1 1 auto;
  padding: var(--#{$prefix}card-spacer-y) var(--#{$prefix}card-spacer-x);
  color: var(--#{$prefix}card-color);
}

.card-title {
  margin-bottom: var(--#{$prefix}card-title-spacer-y);
  color: var(--#{$prefix}card-title-color);
}

.card-subtitle {
  margin-top: calc(-.5 * var(--#{$prefix}card-title-spacer-y)); // stylelint-disable-line function-disallowed-list
  margin-bottom: 0;
  color: var(--#{$prefix}card-subtitle-color);
}

.card-text:last-child {
  margin-bottom: 0;
}

.card-link {
  &:hover {
    text-decoration: if($link-hover-decoration == underline, none, null);
  }

  + .card-link {
    margin-left: var(--#{$prefix}card-spacer-x);
  }
}

//
// Optional textual caps
//

.card-header {
  padding: var(--#{$prefix}card-cap-padding-y) var(--#{$prefix}card-cap-padding-x);
  margin-bottom: 0; // Removes the default margin-bottom of <hN>
  color: var(--#{$prefix}card-cap-color);
  background-color: var(--#{$prefix}card-cap-bg);
  border-bottom: var(--#{$prefix}card-border-width) solid var(--#{$prefix}card-border-color);

  &:first-child {
    @include border-radius(var(--#{$prefix}card-inner-border-radius) var(--#{$prefix}card-inner-border-radius) 0 0);
  }
}

.card-footer {
  padding: var(--#{$prefix}card-cap-padding-y) var(--#{$prefix}card-cap-padding-x);
  color: var(--#{$prefix}card-cap-color);
  background-color: var(--#{$prefix}card-cap-bg);
  border-top: var(--#{$prefix}card-border-width) solid var(--#{$prefix}card-border-color);

  &:last-child {
    @include border-radius(0 0 var(--#{$prefix}card-inner-border-radius) var(--#{$prefix}card-inner-border-radius));
  }
}


//
// Header navs
//

.card-header-tabs {
  margin-right: calc(-.5 * var(--#{$prefix}card-cap-padding-x)); // stylelint-disable-line function-disallowed-list
  margin-bottom: calc(-1 * var(--#{$prefix}card-cap-padding-y)); // stylelint-disable-line function-disallowed-list
  margin-left: calc(-.5 * var(--#{$prefix}card-cap-padding-x)); // stylelint-disable-line function-disallowed-list
  border-bottom: 0;

  .nav-link.active {
    background-color: var(--#{$prefix}card-bg);
    border-bottom-color: var(--#{$prefix}card-bg);
  }
}

.card-header-pills {
  margin-right: calc(-.5 * var(--#{$prefix}card-cap-padding-x)); // stylelint-disable-line function-disallowed-list
  margin-left: calc(-.5 * var(--#{$prefix}card-cap-padding-x)); // stylelint-disable-line function-disallowed-list
}

// Card image
.card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: var(--#{$prefix}card-img-overlay-padding);
  @include border-radius(var(--#{$prefix}card-inner-border-radius));
}

.card-img,
.card-img-top,
.card-img-bottom {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
}

.card-img,
.card-img-top {
  @include border-top-radius(var(--#{$prefix}card-inner-border-radius));
}

.card-img,
.card-img-bottom {
  @include border-bottom-radius(var(--#{$prefix}card-inner-border-radius));
}


//
// Card groups
//

.card-group {
  // The child selector allows nested `.card` within `.card-group`
  // to display properly.
  > .card {
    margin-bottom: var(--#{$prefix}card-group-margin);
  }

  // @include media-breakpoint-up(sm) {
    display: flex;
    flex-flow: row wrap;
    // The child selector allows nested `.card` within `.card-group`
    // to display properly.
    > .card {
      // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
      flex: 1 0 0%;
      margin-bottom: 0;

      + .card {
        margin-left: 0;
        border-left: 0;
      }

      // Handle rounded corners
      @if $enable-rounded {
        &:not(:last-child) {
          @include border-end-radius(0);

          .card-img-top,
          .card-header {
            // stylelint-disable-next-line property-disallowed-list
            border-top-right-radius: 0;
          }
          .card-img-bottom,
          .card-footer {
            // stylelint-disable-next-line property-disallowed-list
            border-bottom-right-radius: 0;
          }
        }

        &:not(:first-child) {
          @include border-start-radius(0);

          .card-img-top,
          .card-header {
            // stylelint-disable-next-line property-disallowed-list
            border-top-left-radius: 0;
          }
          .card-img-bottom,
          .card-footer {
            // stylelint-disable-next-line property-disallowed-list
            border-bottom-left-radius: 0;
          }
        }
      }
    }
  // }
}

//
// Check/radio
//

.form-check {
  display: block;
  min-height: $form-check-min-height;
  margin-bottom: $form-check-margin-bottom;

  .form-check-input {
    margin-right: $form-switch-padding-start;
  }
}

.form-check-reverse {
  padding-right: $form-check-padding-start;
  padding-left: 0;
  text-align: right;

  .form-check-input {
    float: right;
    margin-right: $form-check-padding-start * -1;
    margin-left: 0;
  }
}

.form-check-input {
  flex-shrink: 0;
  width: $form-check-input-width;
  height: $form-check-input-width;
  margin-top: ($line-height-base - $form-check-input-width) * .5; // line-height minus check height
  vertical-align: top;
  appearance: none;
  background-color: var($form-check-bg);
  background-image: var($form-check-bg-image);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  border: $form-check-input-border;
  print-color-adjust: exact; // Keep themed appearance for print
  @include transition($form-check-transition);

  &[type="checkbox"] {
    @include border-radius($form-check-input-border-radius);
  }

  &[type="radio"] {
    // stylelint-disable-next-line property-disallowed-list
    border-radius: $form-check-radio-border-radius;
  }

  &:active {
    filter: $form-check-input-active-filter;
  }

  &:focus {
    border-color: $form-check-input-focus-border;
    outline: 0;
    box-shadow: $form-check-input-focus-box-shadow;
  }

  &:checked {
    background-color: $form-check-input-checked-bg-color;
    border-color: $form-check-input-checked-border-color;

    &[type="checkbox"] {
      @if $enable-gradients {
        $form-check-bg-image: #{escape-svg($form-check-input-checked-bg-image)}, var(--#{$prefix}gradient);
      } @else {
        $form-check-bg-image: #{escape-svg($form-check-input-checked-bg-image)};
      }
    }

    &[type="radio"] {
      @if $enable-gradients {
        $form-check-bg-image: #{escape-svg($form-check-radio-checked-bg-image)}, var(--#{$prefix}gradient);
      } @else {
        $form-check-bg-image: #{escape-svg($form-check-radio-checked-bg-image)};
      }
    }
  }

  &[type="checkbox"]:indeterminate {
    background-color: $form-check-input-indeterminate-bg-color;
    border-color: $form-check-input-indeterminate-border-color;

    @if $enable-gradients {
      $form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image)}, var(--#{$prefix}gradient);
    } @else {
      $form-check-bg-image: #{escape-svg($form-check-input-indeterminate-bg-image)};
    }
  }

  &:disabled {
    pointer-events: none;
    filter: none;
    opacity: $form-check-input-disabled-opacity;
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .form-check-label {
      cursor: default;
      opacity: $form-check-label-disabled-opacity;
    }
  }
}

.form-check-label {
  color: $form-check-label-color;
  cursor: $form-check-label-cursor;
}

//
// Switch
//

.form-switch {
  input[type="checkbox"]:focus {
    outline: unset;

    &:not(:checked) {
      background-color: white;
    }
  }

  .form-check-input {

    width: $form-switch-width;
    background-position: left center;
    background-image: #{escape-svg($form-switch-bg-image)};
    @include border-radius($form-switch-border-radius, 0);
    @include transition($form-switch-transition);

    &:focus {
      background-image: #{escape-svg($form-switch-focus-bg-image)};
    }

    &:checked {
      background-position: $form-switch-checked-bg-position;

      @if $enable-gradients {
        background-image: #{escape-svg($form-switch-checked-bg-image)}, var(--#{$prefix}gradient);
      } @else {
        background-image: #{escape-svg($form-switch-checked-bg-image)};
      }
    }
  }

  &.form-check-reverse {
    padding-right: $form-switch-padding-start;
    padding-left: 0;

    .form-check-input {
      margin-right: $form-switch-padding-start * -1;
      margin-left: 0;
    }
  }
}

.form-check-inline {
  display: inline-block;
  margin-right: $form-check-inline-margin-end;
}

.btn-check {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;

  &[disabled],
  &:disabled {
    + .btn {
      pointer-events: none;
      filter: none;
      opacity: $form-check-btn-check-disabled-opacity;
    }
  }
}

@if $enable-dark-mode {
  @include color-mode(dark) {
    .form-switch .form-check-input:not(:checked):not(:focus) {
      background-image: #{escape-svg($form-switch-bg-image-dark)};
    }
  }
}

small {
  font-size: 95%;
}

.spinner-border {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  z-index: 1000;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  background-color: rgba(210, 210, 210, 0.6); /* Fond semi-transparent */
}

.spinner-border::after {
  content: "";
  width: 2rem;
  height: 2rem;
  border: .25em solid currentcolor;
  border-right-color: transparent;
  border-radius: 50%;
  -webkit-animation: .75s linear infinite spinner-border;
  animation: .75s linear infinite spinner-border;
}

.spinner-container {
  position: relative;
}

@keyframes spinner-border {
  to { transform: rotate(360deg) #{"/* rtl:ignore */"}; }
}
