- require 'visits_helper'
= fields_for 'destination[visits_attributes]', visit, index: i, layout: :horizontal, builder: BootstrapForm::FormBuilder do |f|
  %fieldset
    %a{name: "visit_id=#{visit.id}"}
    %legend.scheduler-border
      %a.accordion-toggle{"data-parent" => "", "data-toggle" => "collapse", href: "#collapseVisit#{visit.id || 0}"}
        %span= t('.legend', n: i)
      - if visit.destination.customer.enable_multi_visits || !current_page?(action: 'new')
        .mb-3.row.destroy-block
          .col-md-3
            %button.btn.btn-default.btn-sm.flag-destroy{title: "#{t('.delete_help')}", type: "button"}
              %i.fa.fa-trash.fa-fw
              = t('.delete')
    .collapse.in{id: "collapseVisit#{visit.id || 0}"}
      = f.hidden_field :id
      = f.check_box :_destroy, class: 'd-none'
      = f.label :_destroy do
        = t('.destroy')
      - if visit.destination.customer.enable_references && visit.destination.customer.enable_multi_visits
        = f.text_field :ref do
          %p.help-block= t '.ref_help'
      - unless visit.destination.customer.enable_orders
        #visit_quantity_input{class: "#{nested_has_error?(:quantities, visit.id)}"}
          %label.col-md-offset-2.col-md-8.field= t 'activerecord.attributes.visit.quantities'
          .col-md-offset-2.col-md-8.field
            - visit.destination.customer.deliverable_units.each do |du|
              .input-group{"data-deliverable_unit_id" => "#{du.id}"}
                = number_field "destination[visits_attributes][#{i}][quantities]", du.id, value: visit.quantities && visit.quantities[du.id], placeholder: du.default_quantity && t('.quantities.default', n: du.localized_default_quantity), class: 'form-control width_1_3', step: 'any'
                = select_tag "destination[visits_attributes][#{i}][quantities_operations][#{du.id}]", options_for_select([[t('.quantities.fill'), :fill], [t('.quantities.empty'), :empty]], visit.quantities_operations[du.id]), include_blank: true, class: 'form-control width_1_3 quantities_operations', 'data-toggle' => 'popover', 'data-trigger' => 'focus', title: t('.quantities.quantities_operations_title'), 'data-content' => t('.quantities.quantities_operations_help'), 'data-placement' => 'top'
                = text_field "destination[visits_attributes][#{i}][quantities_unit]", du.id, value: du.label, class: 'form-control width_1_3', placeholder: t('deliverable_units.form.label_placeholder'), disabled: true
                %span.input-group-addon
                  %i{class: "fa #{du.default_icon} fa-fw"}
            %p.help-block= t '.quantities.help'
      = f.text_field :duration,
        value: visit.duration_time_with_seconds,
        placeholder: visit.destination.customer.visit_duration ? "#{visit.destination.customer.visit_duration_time_with_seconds} (#{t('.duration_default')})" : t('all.unit.hour_minute_second'),
        append: content_tag('i', '', class: 'fa fa-stopwatch fa-fw'),
        help: t('.duration_help')

      #visit_open_close_input{class: "#{nested_has_error?(:time_window_end_1, visit.id)}"}
        %label.sr-only{for: "destination_visits_attributes_\#{i}_time_window_start_1"}= t 'activerecord.attributes.visit.time_window_start_1'
        %label.sr-only{for: "destination_visits_attributes_\#{i}_time_window_end_1"}= t 'activerecord.attributes.visit.time_window_end_1'
        %label.col-md-offset-2.col-md-8.field= t '.time_window_start_end_1'
        .col-md-offset-2.col-md-8.field
          .input-group
            %span.input-group-addon= t 'web.form.from_time'
            = text_field "destination[visits_attributes][#{i}]", :time_window_start_1, class: 'form-control', placeholder: t('all.unit.hour_minute'), value: visit.time_window_start_1_time
            %span.input-group-addon.input-group-borderless= t 'web.form.days'
            = number_field "destination[visits_attributes][#{i}]", :time_window_start_1_day, |
              class: 'form-control number-of-days',                                          |
              placeholder: '0',                                                              |
              min: 0,                                                                        |
              value: number_of_days(visit.time_window_start_1)                               |
            %span.input-group-addon= t 'web.form.to_time'
            = text_field "destination[visits_attributes][#{i}]", :time_window_end_1, class: 'form-control', placeholder: t('all.unit.hour_minute'), value: visit.time_window_end_1_time
            %span.input-group-addon.input-group-borderless= t 'web.form.days'
            = number_field "destination[visits_attributes][#{i}]", :time_window_end_1_day, |
              class: 'form-control number-of-days',                                        |
              placeholder: '0',                                                            |
              min: 0,                                                                      |
              value: number_of_days(visit.time_window_end_1)                               |
            %span.input-group-addon
              %i.fa.fa-arrows-left-right.fa-fw
          %p.help-block= t '.close_help'
      #visit_open_close_input{class: "#{nested_has_error?(:time_window_end_2, visit.id)}"}
        %label.sr-only{for: "destination_visits_attributes_\#{i}_time_window_start_2"}= t 'activerecord.attributes.visit.time_window_start_2'
        %label.sr-only{for: "destination_visits_attributes_\#{i}_time_window_end_2"}= t 'activerecord.attributes.visit.time_window_end_2'
        %label.col-md-offset-2.col-md-8.field= t '.time_window_start_end_2'
        .col-md-offset-2.col-md-8.field
          .input-group
            %span.input-group-addon= t 'web.form.from_time'
            = text_field "destination[visits_attributes][#{i}]", :time_window_start_2, class: 'form-control', placeholder: t('all.unit.hour_minute'), value: visit.time_window_start_2_time
            %span.input-group-addon.input-group-borderless= t 'web.form.days'
            = number_field "destination[visits_attributes][#{i}]", :time_window_start_2_day, |
              class: 'form-control number-of-days',                                          |
              placeholder: '0',                                                              |
              min: 0,                                                                        |
              value: number_of_days(visit.time_window_start_2)                               |
            %span.input-group-addon= t 'web.form.to_time'
            = text_field "destination[visits_attributes][#{i}]", :time_window_end_2, class: 'form-control', placeholder: t('all.unit.hour_minute'), value: visit.time_window_end_2_time
            %span.input-group-addon.input-group-borderless= t 'web.form.days'
            = number_field "destination[visits_attributes][#{i}]", :time_window_end_2_day, |
              class: 'form-control number-of-days',                                        |
              placeholder: '0',                                                            |
              min: 0,                                                                      |
              value: number_of_days(visit.time_window_end_2)                               |
            %span.input-group-addon
              %i.fa.fa-arrows-left-right.fa-fw
          %p.help-block= t '.close_help'
      #visit_revenue_input
        %label.col-md-offset-2.col-md-8.field
          = t('.revenue')
        .col-md-offset-2.col-md-8.field
          .input-group
            = number_field "destination[visits_attributes][#{i}]", :revenue,
              class: 'form-control',
              min: 0,
              step: 'any',
              value: visit.revenue
            %span.input-group-addon
              = t("all.unit.currency_symbol.#{current_user.prefered_currency}")
          %p.help-block
            = t('.revenue_help')
      #visit_priority_input{class: "#{nested_has_error?(:priority, visit.id)}"}
        %label.col-md-offset-2.col-md-8.field= t '.priority'
        .col-md-offset-2.col-md-8.field
          .input-group
            = text_field "destination[visits_attributes][#{i}]", :priority, class: 'form-control', value: visit.priority, data: {'slider-value' => visit.priority || 0}
          %p.help-block= t '.priority_help'
      - if visit.destination.customer.enable_multi_visits || !visit.tags.empty?
        .destination_visits_attributes_tag_ids_input
          = f.select :tag_ids, options_for_select(visit.destination.customer.tags.map{ |tag| [tag.label, tag.id, {'data-color' => tag.color && tag.color[1..-1], 'data-icon' => tag.icon}]}, visit.tags.collect(&:id)), {label: t('activerecord.attributes.visit.tag_ids'), help: t('.tags_help')}, {multiple: true, input_group: content_tag('i', '', class: 'fa fa-tags fa-fw')}

      = f.select :force_position, options_for_select(visit_force_position_options_for_select, selected: visit_force_position_options_for_select_selected(visit)), {label: t('activerecord.attributes.visit.force_position'), help: t('.force_position_help')}, { control_class: 'form-control' }
