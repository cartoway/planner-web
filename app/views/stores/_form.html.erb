<%= twitter_bootstrap_form_for(@store, layout: :horizontal, html: {class: "form-horizontal", "data-destination_id" => (@store.id or 0)}) do |f| %>
  <%= render 'shared/error_messages', model: @store %>
  <fieldset id="destination-details">
    <% if @store.customer.enable_references %>
      <%= f.text_field :ref do %>
        <p class="help-block"><%= t '.ref_help' %></p>
      <% end %>
    <% end %>
    <%= f.text_field :name, required: true %>
    <%= f.text_field :street, {class: "form-control pointing", input_group: content_tag('button', content_tag('i', '', class: 'fa fa-crosshairs fa-fw'), class: 'btn btn-default', type: 'button', title: t('.locate_manually'))} do %>
      <p class="help-block"><%= t 'web.form.helpers.street' %></p>
    <% end %>
    <div id="store_city_input" class="form-group">
      <label class="sr-only" for="store_postalcode"><%= t 'activerecord.attributes.store.postalcode' %></label>
      <label class="sr-only" for="store_city"><%= t 'activerecord.attributes.store.city' %></label>
      <label class="col-md-2 control-label"><%= t 'activerecord.attributes.store.postalcode' %> / <%= t 'activerecord.attributes.store.city' %></label>
      <div class="col-md-6">
        <div class="input-group">
          <%= text_field :store, :postalcode, maxlength: 17, class: 'form-control width_1_2' %>
          <%= text_field :store, :city, class: 'form-control width_1_2' %>
          <span class="input-group-addon"><i class="fa fa-map-o fa-fw"></i></span>
        </div>
      </div>
    </div>

    <% if @store.customer.with_state? %>
      <div id="store_country_input" class="form-group">
        <label class="col-md-2 control-label"><%= t 'activerecord.attributes.store.state' %> / <%= t 'activerecord.attributes.store.country' %></label>
        <div class="col-md-6">
          <div class="input-group">
            <%= text_field :store, :state, class: 'form-control width_1_2' %>
            <%= text_field :store, :country, placeholder: t('.country_default', n: @store.customer.default_country), class: 'form-control width_1_2' %>
            <span class="input-group-addon"><i class="fa fa-map-o fa-fw"></i></span>
          </div>
        </div>
      </div>
    <% else %>
      <%= f.text_field :country, {placeholder: t('.country_default', n: @store.customer.default_country)} %>
    <% end %>

    <div id="store_geocoding_input" class="form-group">
      <label class="col-md-2 control-label" for="store_geocoding"><%= t 'activerecord.attributes.destination.geocoding_accuracy' %></label>
      <div class="col-md-6">
        <div id="geocoding_accuracy"<% if ! @store.geocoding_accuracy %> style="display: none"<% end %>>
          <input type="hidden" name="store[geocoding_accuracy]" value="<%= @store.geocoding_accuracy %>">
          <div id="geocoding-progress" class="progress">
            <div class="progress-bar<% if @store.geocoding_accuracy %> progress-bar-<%= @store.geocoding_accuracy > Mapotempo::Application.config.geocoder.accuracy_success ? 'success' : @store.geocoding_accuracy > Mapotempo::Application.config.geocoder.accuracy_warning ? 'warning' : 'danger' %><% end %>" style="width: <%= @store.geocoding_accuracy ? (@store.geocoding_accuracy * 100).round : 0 %>%;">
              <span><%= @store.geocoding_accuracy ? (@store.geocoding_accuracy * 100).round.to_s + '%' : '' %></span>
            </div>
          </div>
          <p class="help-block"><%= t 'destinations.form.geocoding_accuracy_help' %></p>
        </div>
        <div id="geocoding_fail" style="display: none">
          <%= t 'destinations.form.geocoding_fail' %> - <a href="#" role="button" class="pointing"><i class="fa fa-crosshairs fa-fw"></i> <%= t '.locate_manually' %></a>
        </div>
        <div id="no_geocoding_accuracy"<% if @store.geocoding_accuracy %> style="display: none"<% end %>>
          <%= t 'destinations.form.geocoding_accuracy_none' %>
        </div>
        <div id="geocoding_level"<% if ! @store.geocoding_level %> style="display: none"<% end %>>
          <input type="hidden" name="store[geocoding_level]" value="<%= @store.geocoding_level %>">
          <i id="geocoding-level-point" class="fa fa-map-marker fa-fw geocoding-level"<% if ! @store.point? %> style="display: none"<% end %>></i>
          <i id="geocoding-level-house" class="fa fa-home fa-fw geocoding-level"<% if ! @store.house? %> style="display: none"<% end %>></i>
          <i id="geocoding-level-intersection" class="fa fa-times fa-fw geocoding-level"<% if ! @store.intersection? %> style="display: none"<% end %>></i>
          <i id="geocoding-level-street" class="fa fa-road fa-fw geocoding-level"<% if ! @store.street? %> style="display: none"<% end %>></i>
          <i id="geocoding-level-city" class="fa fa-exclamation-triangle fa-fw geocoding-level"<% if ! @store.city? %> style="display: none"<% end %>></i>
          <span><%= t('activerecord.attributes.destination.geocoding_level') %>: <span id="geocoding-level-value"><%= if @store.geocoding_level
            t("destinations.form.geocoding_level.#{@store.geocoding_level}")
            end %></span></span>
        </div>
         <div id="reverse-geocode"></div>
      </div>
    </div>
    <div class="form-group">
      <span class="col-md-offset-2 col-md-6"><div id="map" class="map-fixed-size"></div></span>
    </div>
    <div id="store_geoloc_input" class="form-group">
      <label class="sr-only" for="store_lat"><%= t 'activerecord.attributes.store.lat' %></label>
      <label class="sr-only" for="store_lnt"><%= t 'activerecord.attributes.store.lng' %></label>
      <label class="col-md-2 control-label"><%= t 'activerecord.attributes.store.lat' %> / <%= t 'activerecord.attributes.store.lng' %></label>
      <div class="col-md-6">
        <div class="input-group">
          <%= number_field :store, :lat, step: 'any', class: 'form-control width_1_2' %>
          <%= number_field :store, :lng, step: 'any', class: 'form-control width_1_2' %>
          <span class="input-group-addon"><i class="fa fa-globe fa-fw"></i></span>
        </div>
      </div>
    </div>
    <div id="store_color_input" class="form-group">
      <label class="col-md-2 control-label"><%= t 'activerecord.attributes.store.color' %></label>
      <div class="col-md-6">
        <div class="input-group">
          <%= select_tag 'store[color]', options_for_select((COLORS_TABLE + [customised_color_verification(@store[:color])]).compact.uniq, @store.color), include_blank: '#000000' %> <i class="fa fa-paint-brush" id="customised_color_picker" title="<%= t('activerecord.attributes.store.customised_color') %>"></i>
          <%= color_field :store, :color, option = { value: customised_color_verification(@store[:color]), id: 'color_picker', name: 'fff' } %>
        </div>
      </div>
    </div>
    <div id="store_icon_input" class="form-group">
      <label class="col-md-2 control-label" for="store_icon"><%= t 'activerecord.attributes.store.icon' %></label>
      <label class="sr-only" for="store_icon_size"><%= t 'activerecord.attributes.store.icon_size' %></label>
      <div class="col-md-6">
        <div class="input-group">
          <%= select_tag 'store[icon]', grouped_options_for_select([
           [t('stores.form.prefered_icons'),
             @grouped_icons[0].map{ |icon| [icon, icon, {:data => {:content => "<i class='fa fa-fw #{icon}'></i> #{icon}"}, :selected => (@store.icon == icon) ? true : nil }]},],
             [t('stores.form.other_icons'),
              @grouped_icons[1].map{ |icon| [icon, icon, {:data => {:content => "<i class='fa fa-fw #{icon}'></i> #{icon}"}, :selected => (@store.icon == icon) ? true : nil }]}
            ]
          ]), include_blank: t('web.form.default', n: 'fa-home'), class: 'form-control width_1_2 selectpicker', 'data-live-search' => true  %>
          <%= select_tag 'store[icon_size]', options_for_select([[t('.icon_size.small'), :small], [t('.icon_size.medium'), :medium], [t('.icon_size.large'), :large]], @store.icon_size), include_blank: t('web.form.default', n: t('.icon_size.large')), class: 'form-control width_1_2' %>
          <span class="input-group-addon"><%= content_tag('i', '', class: 'fa fa-home fa-fw') %></span>
        </div>
      </div>
    </div>
  </fieldset>

  <%= hidden_field :store, :geocoder_version, :value => @store.geocoder_version %>
  <%= hidden_field :store, :geocoded_at, :value => @store.geocoded_at %>

  <%= f.actions do %>
    <%= f.submit %>
  <% end %>
<% end %>
<%
layers = (current_user.customer.profile.layers + [current_user.layer]).sort_by(&:id).uniq.collect{ |layer|
  {
    name: layer.translated_name,
    url: request.ssl? ? layer.urlssl : layer.url,
    attribution: layer.map_attribution,
    default: layer == current_user.layer,
    overlay: layer.overlay
  }
}
controller.js(
  destination_id: @store.id || 0,
  map_layers: Hash[layers.map{ |l| l[:name] }.zip(layers)],
  map_lat: @store.lat || @store.customer.default_position[:lat],
  map_lng: @store.lng || @store.customer.default_position[:lng]
)
%>
