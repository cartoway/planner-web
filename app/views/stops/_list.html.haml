%ul.stops.sortable.list-group{style: ('display: none;' if route[:hidden])}
  - route[:stops]&.each do |stop|
    - if stop[:wait_time]
      %li.d-fake-flex.wait.ui-state-disabled.list-group-item
        .row.d-flex
          .col-xs-6.col-md-4.d-flex.align-items-center.justify-content-between
            .col-xs-2.d-flex.align-items-center.justify-content-center
              %i.fa.fa-stopwatch.fa-fw
            .col-xs-10.d-flex.justify-content-center
              .col-xs-7
                .info.stop-info
                  = stop[:wait_time]
          .col-xs-6.col-md-5.d-flex.align-items-center
            .title
              = t("plannings.edit.wait")
    - if stop[:store]
      %li.d-fake-flex.align-items-center.list-group-item{class: ("ui-state-error" if stop[:error]), "data-stop-id": stop[:stop_id], "data-stop-index": stop[:stop_index], "data-store-id": stop[:store_id], "data-origin-route-id": route[:route_id] }
        .row.store-row
          .col-xs-6.col-md-4.d-flex.justify-content-between.align-items-center
            .col-xs-2.d-flex.align-items-center.justify-content-center
              - color = route[:color_fake] || route[:color] || 'black'
              %i.fa.fa-fw{class: (stop[:icon] ? stop[:icon] : 'fa-store'), style: "color: #{color};"}
            - if stop[:time]
              .col-xs-10
                .col-xs-12
                  .ml-0.ph-0.d-flex.align-items-center.justify-content-end{class: "#{('danger' if stop[:error])} #{('primary stop-info' if stop[:time])}"}
                    - if stop[:time]
                      .col-xs-5
                        = stop[:time]
                        - if stop[:time_day]
                          = "(+#{stop[:time_day]})"
                      .col-xs-7.d-flex.justify-content-center
                        = stop[:store][:departure] || stop[:time]
                        - if stop[:store][:departure_day] || stop[:time_day]
                          = "(+#{stop[:store][:departure_day] || stop[:time_day]})"
          .col-xs-4.col-md-6
            .title
              - if !route[:store_start][:geocoded]
                %i.fa.fa-map-marker.fa-fw{title: t("plannings.edit.error.no_geolocalization")}
              - if route[:store_start][:no_path]
                %i.fa.fa-road.fa-fw{title: t("plannings.edit.error.no_path")}
              %span.name{title: route[:store_start][:name]}
                = route[:store_start][:name]
          .col-xs-2.col-md-2.d-flex.justify-content-center.align-items-center
            - eta_statement = " - #{t('plannings.edit.popup.eta')} #{route[:store_start][:eta_formated]}" if route[:store_start][:eta_formated]
            %span.store-status{class: "stop-status-#{route[:store_start][:status_code]}", title: "#{route[:store_start][:status]}#{eta_statement}", style: ("display: none;" if !route[:store_start][:status])}
            .btn-group.pull-right.stop-tools
              - if @manage_planning[:manage_store]
                %a.marker_edit.btn.btn-default.btn-xs{href: "/stores/#{route[:store_start][:id]}/edit?back=true", title: t("plannings.edit.edit_store_help")}
                  %i.fa.fa-pencil
              %a.marker.btn.btn-default.btn-xs{href: "#", title: t("plannings.edit.marker_help")}
                %i.fa.fa-map-marker
              %a.marker_destroy_store.btn.btn-default.btn-xs{href: "#", title: t("plannings.edit.destroy_store_help")}
                %i.fa.fa-trash
    - if stop[:rest]
      %li.d-fake-flex.align-items-center.list-group-item{class: ("ui-state-error" if stop[:error]), "data-stop-id": stop[:stop_id], "data-stop-index": stop[:stop_index], "data-store-id": stop[:store_id], "data-origin-route-id": route[:route_id] }
        .row.stop-row.d-flex.flex-wrap.align-items-center{class: ("stop-row-#{stop[:status_code]}" if stop[:status])}
          .col-xs-6.col-md-4.d-flex.justify-content-center.align-items-center
            .col-xs-2.d-flex.justify-content-center.align-items-center
              %input.stop_active{type: "checkbox", checked: ("checked" if stop[:active]), disabled: (true if !@manage_planning[:manage_organize]), title: t('plannings.edit.active_help') }
            .col-xs-10.d-flex.align-items-center
              .col-xs-5.d-flex.justify-content-center
                %span.number.stop-label.label{class: (stop[:color_force] ? "color_force" : "" ) + (stop[:active] ? "" : " inactive" ), style: "background-color: #{ stop[:active] ? route[:color] : 'transparent' };"}
                  = stop[:number]
              .col-xs-7
                .stop-info{class: "#{stop[:active] ? 'primary' : 'info'} #{('danger' if stop[:error])}"}
                  - if stop[:active]
                    = stop[:time]
                    - if stop[:time_day]
                      = "(+#{stop[:time_day]})"
          .col-xs-4.col-md-4.d-flex
            .title
              - if stop[:out_of_window]
                %i.fa.fa-stopwatch.fa-fw{title: t("plannings.edit.error.out_of_window_help")}
              - if stop[:out_of_drive_time]
                %i.fa.fa-power-off.fa-fw{title: t("plannings.edit.error.out_of_drive_time_help")}
              - if stop[:out_of_work_time]
                %i.fa.fa-repeat.fa-fw{title: t("plannings.edit.error.out_of_work_time_help")}
              - if stop[:out_of_max_distance]
                %i.fa.fa-ruler.fa-fw{title: t("plannings.edit.error.out_of_max_distance_help")}
              - if stop[:out_of_max_ride_distance]
                %i.fa.fa-compass-drafting.fa-fw{title: t("plannings.edit.error.out_of_max_ride_distance_help")}
              - if stop[:out_of_max_ride_duration]
                %i.fa.fa-stopwatch-20.fa-fw{title: t("plannings.edit.error.out_of_max_ride_duration_help")}
              - if stop[:no_path]
                %i.fa.fa-road.fa-fw{title: t("plannings.edit.error.no_path_help")}

              - title = stop[:name]
              - if stop[:index_visit]
                - title += " # #{stop[:index_visit]}"
              - if stop[:status]
                - title += " - #{stop[:status]}"
              - if stop[:eta_formated]
                - title += " - #{t('plannings.edit.popup.eta')} #{stop[:eta_formated]}"
              %span.name{title: title}
                %i.fa.fa-coffee.fa-fw
                = stop[:name]
          .col-xs-2.col-md-4.hover-tools{style: "display: none;"}
            .col-xs-0.col-md-6
            .col-xs-12.col-md-6.d-flex.align-items-center
              %i.fa.fa-reorder.fa-fw{title: t("plannings.edit.drag_help")}
              .btn-group.pull-right.stop-tools
                %a.marker_edit.btn.btn-default.btn-xs.invisible{href: "/"}
                  %i.fa.fa-pencil
                %a.marker.btn.btn-default.btn-xs{class: ("invisible" if !stop[:geocoded]), href: "#", title: t("plannings.edit.marker_help")}
                  %i.fa.fa-map-marker
    - if stop[:destination] && stop[:visits]
      %li.d-fake-flex.align-items-center.list-group-item{class: ("ui-state-error" if stop[:error]), "data-stop-id": stop[:stop_id], "data-stop-index": stop[:stop_index], "data-origin-route-id": route[:route_id]}
        .row.stop-row.d-flex.flex-wrap.align-items-center{class: ("stop-row-#{stop[:status_code]}" if stop[:status])}
          .col-xs-6.col-md-4.d-flex.justify-content-center.align-items-center
            .col-xs-2.d-flex.justify-content-center.align-items-center
              %input.stop_active{type: "checkbox", checked: ("checked" if stop[:active]), disabled: (true if !@manage_planning[:manage_organize]), title: t('plannings.edit.active_help') }
            .col-xs-10.d-flex.align-items-center
              .col-xs-5.d-flex.justify-content-center
                %span.number.stop-label.label{class: (stop[:color_force] ? "color_force" : "" ) + (stop[:active] ? "" : " inactive" ), style: "background-color: #{ stop[:active] ? route[:color] : 'transparent' };"}
                  = stop[:number]
              .col-xs-7
                .stop-info{class: "#{stop[:active] ? 'primary' : 'info'} #{('danger' if stop[:error])}"}
                  - if stop[:active]
                    = stop[:time]
                    - if stop[:time_day]
                      = "(+#{stop[:time_day]})"
          .col-xs-4.col-md-4.d-flex
            .title
              - if !stop[:geocoded]
                %i.fa.fa-map-marker.fa-fw{title: t("plannings.edit.error.no_geolocalization")}
              - if stop[:out_of_window]
                %i.fa.fa-stopwatch.fa-fw{title: t("plannings.edit.error.out_of_window_help")}
              - if !stop[:unmanageable_capacity] && stop[:out_of_capacity]
                %i.fa.fa-dumpster.fa-fw{title: t("plannings.edit.error.out_of_capacity_help")}
              - if stop[:out_of_drive_time]
                %i.fa.fa-power-off.fa-fw{title: t("plannings.edit.error.out_of_drive_time_help")}
              - if stop[:out_of_work_time]
                %i.fa.fa-repeat.fa-fw{title: t("plannings.edit.error.out_of_work_time_help")}
              - if stop[:out_of_force_position]
                %i.fa.fa-angle-right.fa-fw{title: t("plannings.edit.error.out_of_force_position_help")}
              - if stop[:out_of_relation]
                %i.fa.fa-link-slash.fa-fw{title: t("plannings.edit.error.out_of_relation_help")}
              - if stop[:out_of_max_distance]
                %i.fa.fa-ruler.fa-fw{title: t("plannings.edit.error.out_of_max_distance_help")}
              - if stop[:out_of_max_ride_distance]
                %i.fa.fa-compass-drafting.fa-fw{title: t("plannings.edit.error.out_of_max_ride_distance_help")}
              - if stop[:out_of_max_ride_duration]
                %i.fa.fa-stopwatch-20.fa-fw{title: t("plannings.edit.error.out_of_max_ride_duration_help")}
              - if stop[:unmanageable_capacity]
                %i.fa.fa-times.fa-fw{title: t("plannings.edit.error.unmanageable_capacity_help")}
              - if stop[:no_path]
                %i.fa.fa-road.fa-fw{title: t("plannings.edit.error.no_path_help")}

              - title = stop[:name]
              - if stop[:index_visit]
                - title += " # #{stop[:index_visit]}"
              - if stop[:status]
                - title += " - #{stop[:status]}"
              - if stop[:eta_formated]
                - title += " - #{t('plannings.edit.popup.eta')} #{stop[:eta_formated]}"
              %span.name{title: title}
                = stop[:name]
                - if stop[:index_visit]
                  \#
                  = stop[:index_visit]
          .col-xs-2.col-md-4.hover-tools{style: "display: none;"}
            .col-xs-0.col-md-6
            .col-xs-12.col-md-6.d-flex.align-items-center
              %i.fa.fa-reorder.fa-fw{title: t("plannings.edit.drag_help")}
              .btn-group.stop-tools
                - if @manage_planning[:manage_destination]
                  %a.marker_edit.btn.btn-default.btn-xs{href: "/destinations/#{stop[:destination][:destination_id]}/edit?back=true#collapseVisit#{stop[:visit_id]}", title: t("plannings.edit.edit_visit_help")}
                    %i.fa.fa-pencil
                - if stop[:geocoded]
                  %a.marker.btn.btn-default.btn-xs{href: "#", title: t("plannings.edit.marker_help")}
                    %i.fa.fa-map-marker
          .col-xs-12.col-md-4.not-hover
            .col-xs-6.col-md-0.d-flex
            .col-xs-6.col-md-12.d-flex
              - if stop[:time_window_start_end_1]
                .timewindow-info{title: stop[:time_windows_condensed]}
                  %i.fa.fa-sort.fa-rotate-90.fa-fw
                = stop[:time_windows_condensed]
  - if !route[:with_stops] && route[:size] > 0
    .d-flex.justify-content-center.load-stops
      %button.btn.btn-default{ title: t("plannings.edit.without_stops_title") }
        %i.fa.fa-rectangle-list.fa-fw
        = t("plannings.edit.load_stops")
