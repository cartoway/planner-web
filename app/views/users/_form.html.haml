:ruby
  layers = (@user.admin? ? Layer.all : (@user.customer.profile.layers + [@user.layer]).uniq)
  .sort_by(&:id).collect{ |layer|
    { id: layer.id, name: layer.translated_name, url: request.ssl? ? layer.urlssl : layer.url,
      attribution: layer.map_attribution, default: layer == @user.layer, overlay: layer.overlay
    }
  }
- options = {layout: :vertical, default_label_class: 'col-md-offset-2 col-md-8', default_div_class: 'col-md-offset-2 col-md-8 field' }
= twitter_bootstrap_form_for @user, options do |f|
  = render 'shared/error_messages', model: @user
  = render partial: "users/time_zone"
  = f.collection_select :layer_id, [], (@user.admin? ? Layer.all.sort_by(&:id) : @user.customer.profile.layers).select{ |l| !l[:overlay] }, :id, :translated_name, {}, {required: true}
  .form-group
    %span.col-md-offset-2.col-md-6
      #map.map-fixed-size
  = f.select :prefered_unit, [], User.unities, {}, {:class => 'form-control'}
  = f.text_field :url_click2call do
    %p.help-block= t '.url_click2call_help'
  = f.text_field :api_key, {readonly: true, input_group: content_tag('i', '', class: 'fa fa-key fa-fw')}
  .col-md-offset-2.col-md-6
    = f.submit
:ruby
  controller.js(
    map_layers: Hash[['default'].zip(layers.select{ |l| l[:default] })],
    map_lat: @user.customer && @user.customer.default_position[:lat] || t('stores.default.lat'),
    map_lng: @user.customer && @user.customer.default_position[:lng] || t('stores.default.lng'),
    map_available_layers: Hash[layers.select{ |l| !l[:overlay] }.map{ |l| l[:id] }.zip(layers.select{ |l| !l[:overlay] })]
  )
