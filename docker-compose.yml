x-web: &web
  build: .
  image: ghcr.io/cartoway/planner-web:${CARTOWAY_VERSION:-dev}
  environment:
    RAILS_ENV: ${RAILS_ENV:-production}
    NODE_ENV: ${NODE_ENV:-production}
    GEOCODER_URL: ${GEOCODER_URL:-http://localhost:8081/0.1}
    GEOCODER_API_KEY: ${GEOCODER_API_KEY:-demo}
    ROUTER_URL: ${ROUTER_URL:-http://localhost:8082/0.1}
    ROUTER_API_KEY: ${ROUTER_API_KEY:-demo}
    OPTIMIZER_URL: ${OPTIMIZER_URL:-http://localhost:8083/0.1}
    OPTIMIZER_API_KEY: ${OPTIMIZER_API_KEY:-demo}
    SENTRY_DSN: ${SENTRY_DSN:-}
    HERE_MAP_APIKEY: ${HERE_MAP_APIKEY:-}
    LOG_FORMAT: ${LOG_FORMAT:-}
    URL_SHORTENER: ${URL_SHORTENER:-http://url_shortener:8635}
  volumes:
    - ./config/database.yml.docker:/srv/app/config/database.yml
    - ./docker/production.rb:/srv/app/config/environments/production.rb
    - ./docker/production.rb:/srv/app/config/environments/development.rb
    - ./docker/uploads:/srv/app/public/uploads
  depends_on:
    - db
    - redis-cache
  restart: unless-stopped

services:
  db:
    image: postgis/postgis:15-3.5
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready
      start_interval: 1s
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis-cache:
    image: redis:${REDIS_VERSION:-7-alpine}
    restart: unless-stopped
    command: redis-server --save ""
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      start_interval: 1s
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 5

  web:
    <<: *web
    command: bash -c "LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2 bundle exec rake db:prepare && bundle exec puma -v -p 8080 --pidfile 'server.pid' -t ${PUMA_WORKERS:-0:1}"

  delayed-job:
    <<: *web
    command: bash -c "LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2 bundle exec './bin/delayed_job run'"
    healthcheck:
      disable: true
    deploy:
      replicas: ${DELAYED_JOB_REPLICAS:-1}

  traefik:
    image: traefik:v3.2
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - ${WEB_BIND:-8080}:80
      - ${SHORTNER_BIND:-8635}:8635
      - 127.0.0.1:8280:8080 # Dashboard
    volumes:
      - ./docker/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./docker/traefik/traefik-services.yml:/etc/traefik/traefik-services.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - web
    restart: unless-stopped

volumes:
  pg_data:
