x-web: &web
  build: .
  image: ghcr.io/cartoway/planner-web:${CARTOWAY_VERSION:-dev}
  environment:
    RAILS_ENV: ${RAILS_ENV:-production}
    NODE_ENV: ${NODE_ENV:-production}
    GEOCODER_URL: ${GEOCODER_URL:-http://localhost:8081/0.1}
    GEOCODER_API_KEY: ${GEOCODER_API_KEY:-demo}
    ROUTER_URL: ${ROUTER_URL:-http://localhost:8082/0.1}
    ROUTER_API_KEY: ${ROUTER_API_KEY:-demo}
    OPTIMIZER_URL: ${OPTIMIZER_URL:-http://localhost:8083/0.1}
    OPTIMIZER_API_KEY: ${OPTIMIZER_API_KEY:-demo}
    SENTRY_DSN: ${SENTRY_DSN}
    HERE_MAP_APIKEY: ${HERE_MAP_APIKEY}
  volumes:
    - ./config/database.yml.docker:/srv/app/config/database.yml
    - ./docker/production.rb:/srv/app/config/environments/production.rb
    - ./docker/production.rb:/srv/app/config/environments/development.rb
    - ./docker/uploads:/srv/app/public/uploads
  depends_on:
    - db
    - redis-cache
  restart: unless-stopped

services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis-cache:
    image: redis:${REDIS_VERSION:-7-alpine}
    restart: unless-stopped
    command: redis-server --save ""

  web:
    <<: *web
    ports:
      - "${WEB_BIND:-8080}:8080" # HOST:CONTAINER, edit only HOST part
    command: bash -c "LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2 bundle exec puma -v -p 8080 --pidfile 'server.pid' -t ${PUMA_WORKERS:-0:1}"

  delayed-job:
    <<: *web
    command: bash -c "LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2 bundle exec './bin/delayed_job run'"
    deploy:
      replicas: ${DELAYED_JOB_REPLICAS:-1}

volumes:
  pg_data:
